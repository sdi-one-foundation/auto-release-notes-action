name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GLOBAL_VERSION: "v1"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Current Date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Get the SHA_SHORT
        shell: bash
        run: echo "GITHUB_SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Get the VERSION
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Find and Replace Service Name
        uses: jacobtomlinson/gha-find-replace@2.0.0
        with:
          find: "<Name of Service>"
          replace: "auto-release-notes-action"

      - name: Find and Replace Team Name
        uses: jacobtomlinson/gha-find-replace@2.0.0
        with:
          find: "<Team Name>"
          replace: Foundation

      - name: Find and Replace Version
        uses: jacobtomlinson/gha-find-replace@2.0.0
        with:
          find: "<Version>"
          replace: ${{ env.VERSION }}

      - name: Find and Replace Date
        uses: jacobtomlinson/gha-find-replace@2.0.0
        with:
          find: "<Date Released>"
          replace: ${{ steps.date.outputs.date }}

      - name: Find and Replace Github URL
        uses: jacobtomlinson/gha-find-replace@2.0.0
        with:
          find: "<Repository URL>"
          replace: ${{ github.server_url }}/${{ github.repository }}

      - name: Read ms-teams-card.json
        id: read-json
        uses: juliangruber/read-file-action@v1
        with:
          path: ./ms-teams-card.json

      - name: Update Changelog
        if: ${{ success() }}
        uses: BobAnkh/auto-generate-changelog@v1.2.4
        with:
          ACCESS_TOKEN: ${{ secrets.DEVOPS_BOT_TOKEN }}
          PATH: 'CHANGELOG.md'
          COMMIT_MESSAGE: 'chore(bot): update files for Release ${{ env.VERSION }}.'
          TYPE: |
            feat:Feature,
            fix:Bug Fixes,
            style:Styling,
            refactor:Refactor,
            perf:Performance Improvements,
            test:Testing Changes,
            docs:Documentation,
            chore:Miscellaneous

        # Following action creates global tag to be used alongside new tag (example: v1 points to recent tags in version 1.  Need to change above input when change major versions)
      - name: Git config
        run: |
          git config user.name sdi-devops-bot
          git config user.email sdi-devops-bot@one.singledigits.com

      - name: Tag new target with global tag
        run: git tag -f ${{ env.GLOBAL_VERSION }} ${{ env.VERSION }}
        
      - name: Push new global tag
        run: git push origin ${{ env.GLOBAL_VERSION }} --force

